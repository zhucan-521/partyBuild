<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egovchina.partybuilding.partybuild.repository.TabPbDeptSecretaryMapper">
  <resultMap id="BaseResultMap" type="com.egovchina.partybuilding.partybuild.entity.TabPbDeptSecretary">
    <id column="secretary_id" jdbcType="BIGINT" property="secretaryId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="postive" jdbcType="VARCHAR" property="postive" />
    <result column="join_worker_time" jdbcType="TIMESTAMP" property="joinWorkerTime" />
    <result column="professional_titles" jdbcType="VARCHAR" property="professionalTitles" />
    <result column="professional_specialty" jdbcType="VARCHAR" property="professionalSpecialty" />
    <result column="full_time_schooling" jdbcType="VARCHAR" property="fullTimeSchooling" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="college_major" jdbcType="VARCHAR" property="collegeMajor" />
    <result column="college_major_two" jdbcType="VARCHAR" property="collegeMajorTwo" />
    <result column="serving_time" jdbcType="TIMESTAMP" property="servingTime" />
    <result column="serving_real_time" jdbcType="TIMESTAMP" property="servingRealTime" />
    <result column="incumbent_time" jdbcType="TIMESTAMP" property="incumbentTime" />
    <result column="incumbent_real_time" jdbcType="TIMESTAMP" property="incumbentRealTime" />
    <result column="assessment_situation" jdbcType="VARCHAR" property="assessmentSituation" />
    <result column="selection_situation" jdbcType="VARCHAR" property="selectionSituation" />
    <result column="promotion_situation" jdbcType="VARCHAR" property="promotionSituation" />
    <result column="army_cadres_situation" jdbcType="VARCHAR" property="armyCadresSituation" />
    <result column="reserve_cadres_situation" jdbcType="VARCHAR" property="reserveCadresSituation" />
    <result column="whether_secretary" property="whetherSecretary"/>
    <result column="whether_member" property="whetherMember"/>
    <result column="committee_duties" jdbcType="VARCHAR" property="committeeDuties" />
    <result column="order_num" jdbcType="BIGINT" property="orderNum" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_userid" jdbcType="BIGINT" property="createUserid" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_userid" jdbcType="BIGINT" property="updateUserid" />
    <result column="update_username" jdbcType="VARCHAR" property="updateUsername" />
    <result column="resume" jdbcType="LONGVARCHAR" property="resume" />
    <result column="training_situation" jdbcType="LONGVARCHAR" property="trainingSituation" />
  </resultMap>
  <resultMap id="BaseResultMapVo" extends="BaseResultMap" type="com.egovchina.partybuilding.partybuild.vo.SecretaryMemberVO" />
<!--党务书记详情家庭成员和其职务-->
  <resultMap id="SecretaryVoMap" extends="BaseResultMap" type="com.egovchina.partybuilding.partybuild.vo.SecretaryMemberVO">
    <collection property="positivesVOs"
                select="com.egovchina.partybuilding.partybuild.repository.TabPbPositivesMapper.selectTabPbPositivesByUserId"
                column="user_id" />
    <collection property="familys"
                select="com.egovchina.partybuilding.partybuild.repository.TabPbFamilyMapper.getFamilyMemberVoByUserId"
                column="user_id"/>
      <collection property="rewardsVOs"
                  select="com.egovchina.partybuilding.partybuild.repository.TabPbRewardsMapper.getRewardsVOByUserId"
                  column="{userId=user_id}"/>
      <collection property="punishmentVOs"
                  select="com.egovchina.partybuilding.partybuild.repository.TabPbPunishmentMapper.getPunishmentVOByUserId"
                  column="{userId=user_id}"/>
  </resultMap>
    <!--党务书记列表职务-->
    <resultMap id="SecretaryVosMap"  type="com.egovchina.partybuilding.partybuild.vo.SecretarysVO">
      <id column="secretary_id" jdbcType="BIGINT" property="secretaryId" />
      <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo"/>
      <result column="realname" jdbcType="VARCHAR" property="realname"/>
      <result column="positive_name" jdbcType="INTEGER" property="positiveName"/>
      <result column="positive_level" jdbcType="INTEGER" property="positiveLevel"/>
      <result column="positive_org_name" jdbcType="VARCHAR" property="positiveOrgName"/>
      <result column="positive_start" jdbcType="TIMESTAMP" property="positiveStart"/>
      <result column="positive_finished" jdbcType="TIMESTAMP" property="positiveFinished"/>
      <result column="unit_property" jdbcType="BIGINT" property="unitProperty"/>
    </resultMap>

  <sql id="secretary_column">
      s.secretary_id,
      s.user_id ,
      u.realname ,
      u.id_card_no,
      u.ancestor_place , -- 籍贯
      u.nation, -- 名族
      u.gender,
      u.born_place ,  -- 出生地
      u.birthday ,
      u.join_time ,
      u.work_date ,
      u.health ,
      u.avatar,  -- 头像
      u.rewards,
      s.dept_id,
      s.postive,
      s.professional_titles,
      s.professional_specialty,
      s.full_time_schooling,
      s.education,
      s.college_major,
      s.college_major_two,
      s.resume,
      s.training_situation,
      s.serving_time,
      s.serving_real_time,
      s.incumbent_time,
      s.incumbent_real_time,
      s.assessment_situation,
      s.selection_situation,
      s.promotion_situation,
      s.army_cadres_situation,
      s.reserve_cadres_situation,
      s.whether_secretary,
      s.whether_member,
      s.committee_duties,
      s.order_num
  </sql>
  <sql id="user_column">
      u.user_id,u.dept_id,u.realname,u.avatar,u.id_card_no,u.gender,u.nation,u.ancestor_place,u.born_place,u.health,u.familyorigin,u.birthday,u.work_date,u.phone,
      u.positive,u.police_office,u.join_time,u.order_num as order_num_user
  </sql>
  <sql id="Base_Column_List">
    secretary_id, postive, join_worker_time, professional_titles,whether_secretary,whether_member,
    professional_specialty,full_time_schooling, education, college_major, college_major_two,
    serving_time, serving_real_time, incumbent_time, incumbent_real_time, assessment_situation, 
    selection_situation, promotion_situation, army_cadres_situation, reserve_cadres_situation, 
    committee_duties, order_num,resume, training_situation
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbDeptSecretary" resultMap="BaseResultMap">
    SELECT secretary.*,<include refid="user_column"/> FROM tab_pb_dept_secretary secretary
    JOIN sys_user u ON secretary.user_id =u.user_id AND u.del_flag = 0
    WHERE secretary.del_flag = 0
    <if test="secretaryId != null">
      and secretary_id = #{secretaryId,jdbcType=BIGINT}
    </if>
    <if test="deptId != null">
      and secretary.dept_id = #{deptId}
    </if>
    limit 1
  </select>
  <insert id="insertSelective" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbDeptSecretary">
    insert into tab_pb_dept_secretary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="postive != null">
        postive,
      </if>
      <if test="joinWorkerTime != null">
        join_worker_time,
      </if>
      <if test="professionalTitles != null">
        professional_titles,
      </if>
      <if test="professionalSpecialty != null">
        professional_specialty,
      </if>
      <if test="fullTimeSchooling != null">
        full_time_schooling,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="collegeMajor != null">
        college_major,
      </if>
      <if test="collegeMajorTwo != null">
        college_major_two,
      </if>
      <if test="resume != null">
        resume,
      </if>
      <if test="trainingSituation != null">
        training_situation,
      </if>
      <if test="servingTime != null">
        serving_time,
      </if>
      <if test="servingRealTime != null">
        serving_real_time,
      </if>
      <if test="incumbentTime != null">
        incumbent_time,
      </if>
      <if test="incumbentRealTime != null">
        incumbent_real_time,
      </if>
      <if test="assessmentSituation != null">
        assessment_situation,
      </if>
      <if test="selectionSituation != null">
        selection_situation,
      </if>
      <if test="promotionSituation != null">
        promotion_situation,
      </if>
      <if test="armyCadresSituation != null">
        army_cadres_situation,
      </if>
      <if test="reserveCadresSituation != null">
        reserve_cadres_situation,
      </if>
      <if test="whetherSecretary != null">
        whether_secretary,
      </if>
      <if test="whetherMember != null">
        whether_member,
      </if>
      <if test="committeeDuties != null">
        committee_duties,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserid != null">
        create_userid,
      </if>
      <if test="createUsername != null">
        create_username,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserid != null">
        update_userid,
      </if>
      <if test="updateUsername != null">
        update_username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId},
      </if>
      <if test="deptId != null">
        #{deptId},
      </if>
      <if test="postive != null">
        #{postive},
      </if>
      <if test="joinWorkerTime != null">
        #{joinWorkerTime},
      </if>
      <if test="professionalTitles != null">
        #{professionalTitles},
      </if>
      <if test="professionalSpecialty != null">
        #{professionalSpecialty},
      </if>
      <if test="fullTimeSchooling != null">
        #{fullTimeSchooling},
      </if>
      <if test="education != null">
        #{education},
      </if>
      <if test="collegeMajor != null">
        #{collegeMajor},
      </if>
      <if test="collegeMajorTwo != null">
        #{collegeMajorTwo},
      </if>
      <if test="resume != null">
        #{resume},
      </if>
      <if test="trainingSituation != null">
        #{trainingSituation},
      </if>
      <if test="servingTime != null">
        #{servingTime},
      </if>
      <if test="servingRealTime != null">
        #{servingRealTime},
      </if>
      <if test="incumbentTime != null">
        #{incumbentTime},
      </if>
      <if test="incumbentRealTime != null">
        #{incumbentRealTime},
      </if>
      <if test="assessmentSituation != null">
        #{assessmentSituation},
      </if>
      <if test="selectionSituation != null">
        #{selectionSituation},
      </if>
      <if test="promotionSituation != null">
        #{promotionSituation},
      </if>
      <if test="armyCadresSituation != null">
        #{armyCadresSituation},
      </if>
      <if test="reserveCadresSituation != null">
        #{reserveCadresSituation},
      </if>
      <if test="whetherSecretary != null">
        #{whetherSecretary},
      </if>
      <if test="whetherMember != null">
        #{whetherMember},
      </if>
      <if test="committeeDuties != null">
        #{committeeDuties},
      </if>
      <if test="orderNum != null">
        #{orderNum},
      </if>
      <if test="delFlag != null">
        #{delFlag},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="createUserid != null">
        #{createUserid},
      </if>
      <if test="createUsername != null">
        #{createUsername},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="updateUserid != null">
        #{updateUserid},
      </if>
      <if test="updateUsername != null">
        #{updateUsername},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbDeptSecretary">
    update tab_pb_dept_secretary
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId},
      </if>
      <if test="postive != null">
        postive = #{postive,jdbcType=VARCHAR},
      </if>
      <if test="joinWorkerTime != null">
        join_worker_time = #{joinWorkerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="professionalTitles != null">
        professional_titles = #{professionalTitles,jdbcType=VARCHAR},
      </if>
      <if test="professionalSpecialty != null">
        professional_specialty = #{professionalSpecialty,jdbcType=VARCHAR},
      </if>
      <if test="fullTimeSchooling != null">
        full_time_schooling = #{fullTimeSchooling,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="collegeMajor != null">
        college_major = #{collegeMajor,jdbcType=VARCHAR},
      </if>
      <if test="collegeMajorTwo != null">
        college_major_two = #{collegeMajorTwo,jdbcType=VARCHAR},
      </if>
      <if test="servingTime != null">
        serving_time = #{servingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="servingRealTime != null">
        serving_real_time = #{servingRealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="incumbentTime != null">
        incumbent_time = #{incumbentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="incumbentRealTime != null">
        incumbent_real_time = #{incumbentRealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="assessmentSituation != null">
        assessment_situation = #{assessmentSituation,jdbcType=VARCHAR},
      </if>
      <if test="selectionSituation != null">
        selection_situation = #{selectionSituation,jdbcType=VARCHAR},
      </if>
      <if test="promotionSituation != null">
        promotion_situation = #{promotionSituation,jdbcType=VARCHAR},
      </if>
      <if test="armyCadresSituation != null">
        army_cadres_situation = #{armyCadresSituation,jdbcType=VARCHAR},
      </if>
      <if test="reserveCadresSituation != null">
        reserve_cadres_situation = #{reserveCadresSituation,jdbcType=VARCHAR},
      </if>
      <if test="whetherSecretary != null">
        whether_secretary =  #{whetherSecretary},
      </if>
      <if test="whetherMember != null">
        whether_member = #{whetherMember},
      </if>
      <if test="committeeDuties != null">
        committee_duties = #{committeeDuties,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        create_userid = #{createUserid,jdbcType=BIGINT},
      </if>
      <if test="createUsername != null">
        create_username = #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        update_userid = #{updateUserid,jdbcType=BIGINT},
      </if>
      <if test="updateUsername != null">
        update_username = #{updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="resume != null">
        resume = #{resume,jdbcType=LONGVARCHAR},
      </if>
      <if test="trainingSituation != null">
        training_situation = #{trainingSituation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where secretary_id = #{secretaryId,jdbcType=BIGINT}
  </update>
  <update id="tombstone" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbDeptSecretary">
    update tab_pb_dept_secretary
    <set>
      del_flag = 1,
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        update_userid = #{updateUserid,jdbcType=BIGINT},
      </if>
      <if test="updateUsername != null">
        update_username = #{updateUsername,jdbcType=VARCHAR},
      </if>
    </set>
    where secretary_id = #{secretaryId}
  </update>

  <!--党务书记根据userId选择-->
   <select id="selectSecretaryVOByUserId" parameterType="Long" resultMap="SecretaryVoMap">
        select
          u.user_id,
          u.realname ,
          u.id_card_no,
          u.ancestor_place , -- 籍贯
          u.nation, -- 名族
          u.gender,
          u.born_place ,  -- 出生地
          u.birthday ,
          u.join_time ,
          u.work_date ,
          u.health ,
          u.avatar,  -- 头像
          u.rewards
          from
          sys_user u
          where
          u.user_id=#{userId}
   </select>

  <!--党务书记根据SecretaryId选择-->
  <select id="selectSecretaryVOBySecretaryId" parameterType="Long" resultMap="SecretaryVoMap">
          select
            u.user_id,
            u.realname ,
            u.id_card_no,
            u.ancestor_place , -- 籍贯
            u.nation, -- 名族
            u.gender,
            u.born_place ,  -- 出生地
            u.birthday ,
            u.join_time ,
            u.work_date ,
            u.health ,
            u.avatar -- 头像
          from
          tab_pb_lead_team_member s
          LEFT JOIN  sys_user u  on u.user_id=s.user_id
          where
          s.member_id=#{SecretaryId}
          and
          s.del_flag=0
   </select>

  <!--列表查询书记-->
  <select id="selectSecretaryVOList" parameterType="com.egovchina.partybuilding.partybuild.entity.SecretaryMemberQueryBean" resultMap="SecretaryVosMap">
          SELECT
            t.member_id as secretary_id,
            u.realname,
            -- u.id_card_no,
            t.positive_id as positive_name,
            (select org_short_name from sys_dept where dept_id =t.org_id )  as positive_org_name,
            t.tenure_begin as positive_start,
            t.rank as positive_level ,
            unit_property ,
            (select sort from sys_dict where id= t.positive_id)  positive_name_order ,
            (select sort from sys_dict where id=  t.rank) positive_level_order
            from
            tab_pb_lead_team_member t
            LEFT JOIN
            sys_user u on u.user_id=t.user_id
            LEFT JOIN
            tab_pb_unit_info f on f.org_id=t.org_id
            LEFT JOIN
            sys_dept d on d.dept_id = t.org_id
         <where>
           t.positive_id in (251,253,254,256,257,260,261,348,349,353)
           and
            t.del_flag=0
            <if test="realname != null and realname != ''">
              AND u.realname like CONCAT('%',#{realname},'%')
            </if>
            <if test="idCardNo != null and idCardNo != ''">
              AND u.id_card_no = #{idCardNo}
            </if>
            <if test="positiveName != null and positiveName != ''">
              AND  t.positive_id = #{positiveName}
            </if>
           <if test="unitProperty != null and unitProperty !=''">
               and
               <foreach collection="unitProperties" open="(" item="item" separator=" or " close=")">
                 find_in_set(#{item}, unit_property)
               </foreach>
           </if>
              <choose>
                <when test="orgRange == 1">
                  AND (d.dept_id = #{rangeDeptId} OR d.parent_id = #{rangeDeptId})
                </when>
                <when test="orgRange == 2">
                  AND find_in_set(#{rangeDeptId}, d.full_path)
                </when>
                <otherwise>
                  AND d.dept_id = #{rangeDeptId}
                </otherwise>
              </choose>
             ORDER BY  positive_name_order DESC, positive_level_order DESC
         </where>
   </select>
</mapper>