<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egovchina.partybuilding.partybuild.repository.TabPbSpcialWorkerMapper">
    <resultMap id="BaseResultMap" type="com.egovchina.partybuilding.partybuild.entity.TabPbSpcialWorker">
        <id column="special_worker_id" jdbcType="BIGINT" property="specialWorkerId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="manage_org_id" jdbcType="BIGINT" property="manageOrgId"/>
        <result column="arrive_time" jdbcType="TIMESTAMP" property="arriveTime"/>
        <result column="left_time" jdbcType="TIMESTAMP" property="leftTime"/>
        <result column="ebl_flag" jdbcType="VARCHAR" property="eblFlag"/>
        <result column="del_flag" jdbcType="VARCHAR" property="delFlag"/>
        <result column="order_num" jdbcType="BIGINT" property="orderNum"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_userid" jdbcType="BIGINT" property="createUserid"/>
        <result column="create_username" jdbcType="VARCHAR" property="createUsername"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_userid" jdbcType="BIGINT" property="updateUserid"/>
        <result column="update_username" jdbcType="VARCHAR" property="updateUsername"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.egovchina.partybuilding.partybuild.entity.TabPbSpcialWorker">
        <result column="comment" jdbcType="LONGVARCHAR" property="comment"/>
    </resultMap>

    <resultMap id="SpecialWorkerVOMap" type="com.egovchina.partybuilding.partybuild.vo.SpecialWorkerVO">
        <id column="special_worker_id" jdbcType="BIGINT" property="specialWorkerId"/>
        <result column="manage_org_id" jdbcType="BIGINT" property="manageOrgId"/>
        <result column="arrive_time" jdbcType="TIMESTAMP" property="arriveTime"/>
        <result column="left_time" jdbcType="TIMESTAMP" property="leftTime"/>
        <result column="dept_id" jdbcType="BIGINT" property="deptId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo"/>
        <result column="gender" jdbcType="BIGINT" property="gender"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="contactor" jdbcType="VARCHAR" property="contactor"/>
        <result column="contact_number" jdbcType="VARCHAR" property="contactNumber"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="dept_name" jdbcType="VARCHAR" property="deptName"/>
        <result column="manage_org_name" jdbcType="VARCHAR" property="manageOrgName"/>
    </resultMap>

    <sql id="Base_Column_List">
    special_worker_id, user_id, manage_org_id, arrive_time, left_time, ebl_flag, del_flag, 
    order_num, description, create_time, create_userid, create_username, update_time, 
    update_userid, update_username, version
  </sql>
    <sql id="Blob_Column_List">
    comment
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tab_pb_spcial_worker
        where special_worker_id = #{specialWorkerId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tab_pb_spcial_worker
    where special_worker_id = #{specialWorkerId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true"  keyProperty="specialWorkerId" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbSpcialWorker">
    insert into tab_pb_spcial_worker (special_worker_id, user_id, manage_org_id, 
      arrive_time, left_time, ebl_flag, 
      del_flag, order_num, description, 
      create_time, create_userid, create_username, 
      update_time, update_userid, update_username, 
      version, comment)
    values (#{specialWorkerId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{manageOrgId,jdbcType=BIGINT}, 
      #{arriveTime,jdbcType=TIMESTAMP}, #{leftTime,jdbcType=TIMESTAMP}, #{eblFlag,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=VARCHAR}, #{orderNum,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserid,jdbcType=BIGINT}, #{createUsername,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserid,jdbcType=BIGINT}, #{updateUsername,jdbcType=VARCHAR}, 
      #{version,jdbcType=BIGINT}, #{comment,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbSpcialWorker">
        insert into tab_pb_spcial_worker
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="specialWorkerId != null">
                special_worker_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="manageOrgId != null">
                manage_org_id,
            </if>
            <if test="arriveTime != null">
                arrive_time,
            </if>
            <if test="leftTime != null">
                left_time,
            </if>
            <if test="eblFlag != null">
                ebl_flag,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUserid != null">
                create_userid,
            </if>
            <if test="createUsername != null">
                create_username,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateUserid != null">
                update_userid,
            </if>
            <if test="updateUsername != null">
                update_username,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="comment != null">
                comment,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="specialWorkerId != null">
                #{specialWorkerId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="manageOrgId != null">
                #{manageOrgId,jdbcType=BIGINT},
            </if>
            <if test="arriveTime != null">
                #{arriveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="leftTime != null">
                #{leftTime,jdbcType=TIMESTAMP},
            </if>
            <if test="eblFlag != null">
                #{eblFlag,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=VARCHAR},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=BIGINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserid != null">
                #{createUserid,jdbcType=BIGINT},
            </if>
            <if test="createUsername != null">
                #{createUsername,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserid != null">
                #{updateUserid,jdbcType=BIGINT},
            </if>
            <if test="updateUsername != null">
                #{updateUsername,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=BIGINT},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbSpcialWorker">
        update tab_pb_spcial_worker
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="manageOrgId != null">
                manage_org_id = #{manageOrgId,jdbcType=BIGINT},
            </if>
            <if test="arriveTime != null">
                arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="leftTime != null">
                left_time = #{leftTime,jdbcType=TIMESTAMP},
            </if>
            <if test="eblFlag != null">
                ebl_flag = #{eblFlag,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=VARCHAR},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=BIGINT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserid != null">
                create_userid = #{createUserid,jdbcType=BIGINT},
            </if>
            <if test="createUsername != null">
                create_username = #{createUsername,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserid != null">
                update_userid = #{updateUserid,jdbcType=BIGINT},
            </if>
            <if test="updateUsername != null">
                update_username = #{updateUsername,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=BIGINT},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where special_worker_id = #{specialWorkerId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbSpcialWorker">
    update tab_pb_spcial_worker
    set user_id = #{userId,jdbcType=BIGINT},
      manage_org_id = #{manageOrgId,jdbcType=BIGINT},
      arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      left_time = #{leftTime,jdbcType=TIMESTAMP},
      ebl_flag = #{eblFlag,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_userid = #{createUserid,jdbcType=BIGINT},
      create_username = #{createUsername,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=BIGINT},
      update_username = #{updateUsername,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT},
      comment = #{comment,jdbcType=LONGVARCHAR}
    where special_worker_id = #{specialWorkerId,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbSpcialWorker">
    update tab_pb_spcial_worker
    set user_id = #{userId,jdbcType=BIGINT},
      manage_org_id = #{manageOrgId,jdbcType=BIGINT},
      arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      left_time = #{leftTime,jdbcType=TIMESTAMP},
      ebl_flag = #{eblFlag,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_userid = #{createUserid,jdbcType=BIGINT},
      create_username = #{createUsername,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=BIGINT},
      update_username = #{updateUsername,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT}
    where special_worker_id = #{specialWorkerId,jdbcType=BIGINT}
  </update>

    <!--查询专干党员信息-->
    <select id="selectSpecialWorkerVOList"
            parameterType="com.egovchina.partybuilding.partybuild.entity.SpecialWorkerQueryBean"
            resultMap="SpecialWorkerVOMap">
        SELECT
        sw.special_worker_id,
        d.contactor,
        d.contact_number,
        u.id_card_no,
        u.gender,
        u.realname AS username,
        u.phone,
        u.user_id,
        sw.arrive_time,
        sw.manage_org_id,
        (case WHEN NOW() > sw.left_time THEN -1
        WHEN IFNULL( sw.left_time, 1) = 1 or NOW() &lt;= sw.left_time  THEN 1 end
        ) status,
        (select name from sys_dept where dept_id= sw.manage_org_id) dept_name,
        u.dept_id,
        (select name from sys_dept where dept_id= u.dept_id) manage_org_name,
        sw.left_time
        FROM
        tab_pb_spcial_worker sw
        LEFT JOIN sys_user u on u.user_id=sw.user_id
        left  join sys_dept d on sw.manage_org_id = d.dept_id
        <where>
            <if test="null != specialWorkerId and ''!=specialWorkerId">
                and  sw.special_worker_id = #{specialWorkerId}
            </if>
            <if test="null != username and ''!=username">
                and  u.realname like CONCAT('%',#{username},'%')
            </if>
            <if test="null != idCardNo and ''!=idCardNo">
                and   u.id_card_no= #{idCardNo}
            </if>
            <choose>
                <when test="orgRange == 1">
                    AND (d.dept_id = #{rangeDeptId} OR d.parent_id = #{rangeDeptId})
                </when>
                <when test="orgRange == 2">
                    AND find_in_set(#{rangeDeptId}, d.full_path)
                </when>
                <otherwise>
                    AND d.dept_id = #{rangeDeptId}
                </otherwise>
            </choose>
            and sw.del_flag = 0
        </where>
        ORDER BY
        status
        DESC
    </select>

    <!--删除专干人员根据用户id-->
    <delete id="deleteTabSpecialWorkerByUserId" parameterType="Long">
        delete from sys_user_role where user_id= #{userId}  and  role_id = 44
    </delete>

    <!--单个详情查询-->
    <select id="selectSpecialWorkerVOById" parameterType="java.lang.Long" resultMap="SpecialWorkerVOMap">
        SELECT
        sw.special_worker_id,
        d.contactor,
        d.contact_number,
        u.id_card_no,
        u.gender,
        u.realname AS username,
        u.phone,
        u.user_id,
        sw.arrive_time,
        sw.manage_org_id,
        (case WHEN NOW() > sw.left_time THEN -1
        WHEN IFNULL( sw.left_time, 1) = 1 or NOW() &lt;= sw.left_time  THEN 1 end
        ) status,
        (select name from sys_dept where dept_id= sw.manage_org_id) dept_name,
        u.dept_id,
        (select name from sys_dept where dept_id= u.dept_id) manage_org_name,
        sw.left_time
        FROM
        tab_pb_spcial_worker sw
        LEFT JOIN sys_user u on u.user_id=sw.user_id
        left  join sys_dept d on sw.manage_org_id = d.dept_id
        <where>
            sw.special_worker_id = #{specialWorkerId}
        </where>
        and sw.del_flag = 0
    </select>

    <!--查找专干是否在职 没有在职返回null 在职返回在职对象-->
    <select id="checkSpecialWhetherTOLeave" parameterType="Long" resultType="boolean">
       SELECT #{user_id} in (select user_id from tab_pb_spcial_worker where (left_time > NOW() or (left_time is null)) and del_flag=0)
    </select>

</mapper>