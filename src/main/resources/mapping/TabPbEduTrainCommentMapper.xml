<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egovchina.partybuilding.partybuild.repository.TabPbEduTrainCommentMapper">
  <resultMap id="BaseResultMap" type="com.egovchina.partybuilding.partybuild.entity.TabPbEduTrainComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, course_id, user_id, level, result, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_pb_edu_train_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectList" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbEduTrainComment" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tab_pb_edu_train_comment
    where 1=1
    <if test="courseId != null">
      and course_id = #{courseId}
    </if>
    <if test="userId != null">
      and user_id = #{userId}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tab_pb_edu_train_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbEduTrainComment">
    insert into tab_pb_edu_train_comment (id, course_id, user_id, 
      level, result, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{level,jdbcType=INTEGER}, #{result,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbEduTrainComment">
    insert into tab_pb_edu_train_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbEduTrainComment">
    update tab_pb_edu_train_comment
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.egovchina.partybuilding.partybuild.entity.TabPbEduTrainComment">
    update tab_pb_edu_train_comment
    set course_id = #{courseId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      level = #{level,jdbcType=INTEGER},
      result = #{result,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>