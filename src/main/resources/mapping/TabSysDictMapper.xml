<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egovchina.partybuilding.partybuild.repository.TabSysDictMapper">
    <resultMap id="BaseResultMap" type="com.egovchina.partybuilding.partybuild.system.entity.SysDict">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="value" jdbcType="VARCHAR" property="value"/>
        <result column="label" jdbcType="VARCHAR" property="label"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="sort" jdbcType="DECIMAL" property="sort"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, parent_id, value, label, type, description, sort, create_time, update_time, remarks, 
    del_flag
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_dict
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectOneByType" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_dict
        where  type = #{type} and value = #{type}
    </select>
    <select id="selectLists" parameterType="com.egovchina.partybuilding.partybuild.system.entity.SysDict" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_dict d
        where del_flag = 0
        <if test="parentId != null">
            and parent_id = #{parentId}
        </if>
        <if test="type != null">
            and type = #{type} and value != #{type}
        </if>
        <if test="value != null">
            and value = #{value}
        </if>
        <if test="label != null">
            and label = #{label}
        </if>
        ORDER BY sort ASC
    </select>
    <select id="selectTree" parameterType="com.egovchina.partybuilding.partybuild.system.entity.SysDict" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_dict
        where del_flag = 0
        <if test="parentId != null">
            and parent_id = #{parentId}
        </if>
        <if test="type != null">
            and type = #{type} and value != #{type}
        </if>
        <if test="value != null">
            and value = #{value}
        </if>
        <if test="label != null">
            and label = #{label}
        </if>
        ORDER BY sort ASC
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_dict
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.egovchina.partybuilding.partybuild.system.entity.SysDict">
    insert into sys_dict (id, parent_id, value, 
      label, type, description, 
      sort, create_time, update_time, 
      remarks, del_flag)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{value,jdbcType=VARCHAR}, 
      #{label,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{sort,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR}, 0)
  </insert>
    <insert id="insertSelective" parameterType="com.egovchina.partybuilding.partybuild.system.entity.SysDict">
        insert into sys_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="value != null">
                value,
            </if>
            <if test="label != null">
                label,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="value != null">
                #{value,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                #{label,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                0,
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.egovchina.partybuilding.partybuild.system.entity.SysDict">
        update sys_dict
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="value != null">
                value = #{value,jdbcType=VARCHAR},
            </if>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.egovchina.partybuilding.partybuild.system.entity.SysDict">
    update sys_dict
    set parent_id = #{parentId,jdbcType=INTEGER},
      value = #{value,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <!--根据字典类型和字典值查询字典信息用于字典序列化-->
    <select id="findOneUseForDictSerialization" resultType="DictDto">
        select
          group_concat(d.label) as  label
        from sys_dict d
        <where>
            <choose>
                <when test="dictType != null and dictType != ''">
                    AND (find_in_set(d.id, #{dictValue}) OR find_in_set(d.`value`, #{dictValue}))
                    AND d.`type` = #{dictType} AND d.`value` != d.`type`
                </when>
                <otherwise>
                    AND find_in_set(d.id, #{dictValue})
                </otherwise>
            </choose>
        </where>
    </select>
</mapper>