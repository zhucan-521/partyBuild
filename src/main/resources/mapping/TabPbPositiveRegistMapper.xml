<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egovchina.partybuilding.partybuild.repository.TabPbPositiveRegistMapper">

  <resultMap id="BaseResultMap" type="com.egovchina.partybuilding.partybuild.entity.TabPbPositiveRegist">
    <id column="positive_regist_id" jdbcType="BIGINT" property="positiveRegistId"/>
    <result column="community_id" jdbcType="BIGINT" property="communityId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="regist_date" jdbcType="TIMESTAMP" property="registDate"/>
    <result column="regist_comment" jdbcType="VARCHAR" property="registComment" />
    <result column="from_orgnize_id" jdbcType="BIGINT" property="fromOrgnizeId" />
    <result column="from_orgnize_code" jdbcType="VARCHAR" property="fromOrgnizeCode" />
    <result column="from_orgnize_name" jdbcType="VARCHAR" property="fromOrgnizeName"/>
    <result column="from_orgnize_place" jdbcType="VARCHAR" property="fromOrgnizePlace" />
    <result column="process_man" jdbcType="VARCHAR" property="processMan" />
    <result column="process_time" jdbcType="TIMESTAMP" property="processTime" />
    <result column="process_result" jdbcType="VARCHAR" property="processResult"/>
    <result column="revoke_tag" jdbcType="TINYINT" property="revokeTag" />
    <result column="revoke_tomment" jdbcType="VARCHAR" property="revokeTomment" />
    <result column="revoke_date" jdbcType="TIMESTAMP" property="revokeDate"/>
    <result column="ebl_flag" jdbcType="VARCHAR" property="eblFlag" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
    <result column="order_num" jdbcType="BIGINT" property="orderNum" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_userid" jdbcType="BIGINT" property="createUserid" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_userid" jdbcType="BIGINT" property="updateUserid" />
    <result column="update_username" jdbcType="VARCHAR" property="updateUsername" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>

  <!--PositiveRegisterVOResultMap-->
  <resultMap id="PositiveRegisterVOResultMap" extends="BaseResultMap"
             type="com.egovchina.partybuilding.partybuild.vo.PositiveRegisterVO">
    <id column="positive_regist_id" jdbcType="BIGINT" property="positiveRegistId"/>
    <result column="user_id" jdbcType="BIGINT" property="userId"/>
    <result column="realname" jdbcType="VARCHAR" property="realname"/>
    <result column="community_id" jdbcType="BIGINT" property="communityId"/>
    <result column="community_name" jdbcType="VARCHAR" property="communityName"/>
    <result column="gender" jdbcType="BIGINT" property="gender"/>
    <result column="id_card_no" jdbcType="VARCHAR" property="idCardNo"/>
    <result column="age" jdbcType="INTEGER" property="age"/>
    <result column="identity_type" jdbcType="BIGINT" property="identityType"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="regist_date" jdbcType="TIMESTAMP" property="registDate"/>
    <result column="regist_comment" jdbcType="VARCHAR" property="registComment"/>
    <result column="from_orgnize_id" jdbcType="BIGINT" property="fromOrgnizeId"/>
    <result column="from_orgnize_code" jdbcType="VARCHAR" property="fromOrgnizeCode"/>
    <result column="from_orgnize_name" jdbcType="VARCHAR" property="fromOrgnizeName"/>
    <result column="from_orgnize_place" jdbcType="VARCHAR" property="fromOrgnizePlace"/>
    <result column="revoke_tag" jdbcType="TINYINT" property="revokeTag"/>
    <result column="revoke_tomment" jdbcType="VARCHAR" property="revokeTomment"/>
    <result column="revoke_date" jdbcType="TIMESTAMP" property="revokeDate"/>
    <result column="can_return" jdbcType="TINYINT" property="canReturn"/>
  </resultMap>

  <!--包含附件的VO ResultMap-->
  <resultMap extends="PositiveRegisterVOResultMap" id="ContainAttachmentPositiveRegisterVOResultMap"
             type="com.egovchina.partybuilding.partybuild.vo.PositiveRegisterVO">
    <collection property="attachments"
                select="com.egovchina.partybuilding.partybuild.repository.TabPbAttachmentMapper.selectWithConditions"
                column="{hostId=positive_regist_id,attachmentType=attachment_type}"/>
  </resultMap>

  <!--根据条件查询报到党员VO列表-->
  <select id="selectPositiveRegisterMemberVOListByCondition"
          parameterType="com.egovchina.partybuilding.partybuild.entity.PositiveRegisterQueryBean"
          resultMap="PositiveRegisterVOResultMap">
    SELECT
      pr.positive_regist_id,
      pr.user_id,
      u.realname,
      u.gender,
      u.id_card_no,
      u.identity_type,
      u.phone,
      birthday2age ( DATE_FORMAT( u.birthday, '%Y-%m-%d' ) ) AS age,
      pr.community_id,
      ad.administrative_division_name AS community_name,
      pr.regist_date,
      pr.regist_comment,
      pr.from_orgnize_id,
      pr.from_orgnize_code,
      pr.from_orgnize_name,
      pr.from_orgnize_place,
      pr.revoke_tag,
      pr.revoke_tomment,
      pr.revoke_date,
      CASE WHEN now( ) > pr.regist_date
        AND pr.revoke_tag = 1 THEN
        1 ELSE 0
      END AS can_return, <!--是否可返回-->
      2 AS expect,
      COUNT( DISTINCT mp.participant_id) AS actual
    FROM tab_pb_positive_regist pr
    INNER JOIN tab_pb_administrative_division ad ON pr.community_id = ad.administrative_division_id
    INNER JOIN sys_user u ON u.user_id = pr.user_id
    LEFT JOIN tab_pb_party_masses_activity ma ON ma.community_id = ad.administrative_division_id
      AND ma.del_flag = '0'
      AND ma.ebl_flag = '1'
    LEFT JOIN tab_pb_party_masses_participant mp ON ma.party_masses_activity_id = mp.party_masses_activity_id
      AND u.user_id = mp.user_id
      AND mp.signin_time IS NOT NULL
      AND mp.del_flag = '0'
      AND mp.ebl_flag = '1'
    <where>
      pr.del_flag = 0
      AND ad.del_flag = 0
      AND u.del_flag = '0'
      AND u.ebl_flag = '1'
      <if test="communityId != null">
        <choose>
          <when test="orgRange == 1">
            AND (ad.administrative_division_id = #{communityId} OR ad.parent_id = #{communityId})
          </when>
          <when test="orgRange == 2">
            AND ad.inner_level LIKE CONCAT((SELECT inner_level FROM tab_pb_administrative_division innerad WHERE innerad.administrative_division_id = #{communityId}), '%')
          </when>
          <otherwise>
            AND ad.administrative_division_id = #{communityId}
          </otherwise>
        </choose>
      </if>
      <if test="orgId != null">
        AND EXISTS (
          SELECT 1 FROM sys_user inneru
          INNER JOIN sys_dept d ON d.dept_id = inneru.dept_id
          WHERE d.del_flag = '0'
            AND d.ebl_flag = '1'
            AND inneru.del_flag = '0'
            AND inneru.ebl_flag = '1'
            <!--组织范围  1 当前组织（包括一级下级组织）2当前组织（包含所有下级组织） -->
            <choose>
              <when test="orgRange == 1">
                AND (d.dept_id = #{orgId} OR d.parent_id = #{orgId})
              </when>
              <when test="orgRange == 2">
                AND d.org_inner_code LIKE CONCAT((SELECT org_inner_code FROM sys_dept innerd WHERE innerd.dept_Id = #{orgId}), '%')
              </when>
              <otherwise>
                AND d.dept_id = #{orgId}
              </otherwise>
            </choose>
            AND inneru.user_id = u.user_id
        )
      </if>
      <if test="realname != null and realname != ''">
        AND u.realname like CONCAT('%', #{realname}, '%')
      </if>
      <if test="registDateBegin != null">
        AND date_format(pr.regist_date, '%Y-%m-%d') &gt;= date_format(#{registDateBegin}, '%Y-%m-%d')
      </if>
      <if test="registDateEnd != null ">
        AND date_format(pr.regist_date, '%Y-%m-%d') &lt;= date_format(#{registDateEnd}, '%Y-%m-%d')
      </if>
      <if test="revokeTag != null and revokeTag != ''">
        AND pr.revoke_tag = #{revokeTag}
      </if>
    </where>
    GROUP BY pr.user_id
  </select>

  <!--根据id查询报到信息VO-->
  <select id="selectPositiveRegisterVOById" parameterType="java.lang.Long"
          resultMap="ContainAttachmentPositiveRegisterVOResultMap">
    SELECT
      pr.positive_regist_id,
      pr.user_id,
      u.realname,
      u.gender,
      u.id_card_no,
      u.identity_type,
      u.phone,
      birthday2age ( DATE_FORMAT( u.birthday, '%Y-%m-%d' ) ) AS age,
      pr.community_id,
      ad.administrative_division_name AS community_name,
      pr.regist_date,
      pr.regist_comment,
      pr.from_orgnize_id,
      pr.from_orgnize_code,
      pr.from_orgnize_name,
      pr.from_orgnize_place,
      pr.revoke_tag,
      pr.revoke_tomment,
      pr.revoke_date,
      52 AS attachment_type
    FROM tab_pb_positive_regist pr
    LEFT JOIN tab_pb_administrative_division ad ON pr.community_id = ad.administrative_division_id AND ad.del_flag = 0
    LEFT JOIN sys_user u ON u.user_id = pr.user_id
    WHERE pr.positive_regist_id = #{positiveRegistId}
  </select>

  <!--检查指定党员是否已在指定社区报到-->
  <select id="checkPartyMemberToReportedInTheCommunity" resultType="java.lang.Boolean">
    SELECT
        COUNT( 1 )
    FROM
        tab_pb_positive_regist
    WHERE
        del_flag = 0
        AND user_id = #{userId}
        AND community_id = #{communityId}
  </select>

  <!--聚合生成党员报到数据-->
  <select id="aggregateGeneratePartyMemberRegisterData"
          resultType="com.egovchina.partybuilding.partybuild.entity.TabPbPositiveRegist">
    SELECT
        u.user_id,
        d.dept_id AS fromOrgnizeId,
        d.`name` AS fromOrgnizeName,
        d.org_code AS fromOrgnizeCode,
        d.address AS fromOrgnizePlace
    FROM
        sys_user u
        LEFT JOIN sys_dept d ON d.dept_id = u.dept_id
    WHERE
        u.user_id = #{userId}
  </select>

  <!--根据id查询报到信息-->
  <select id="selectPositiveRegisterById"
          parameterType="java.lang.Long"
          resultType="com.egovchina.partybuilding.partybuild.entity.TabPbPositiveRegist">
    SELECT * FROM tab_pb_positive_regist WHERE del_flag = 0 AND positive_regist_id = #{positiveRegistId}
  </select>
</mapper>